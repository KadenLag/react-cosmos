'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startServer = undefined;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var startServer = exports.startServer = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
    var _this = this;

    var cosmosConfig, publicPath, publicUrl, app, _createServer, server, startServer, stopServer, closeSockets, watcher;

    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            cosmosConfig = (0, _reactCosmosConfig.getCosmosConfig)();
            publicPath = cosmosConfig.publicPath, publicUrl = cosmosConfig.publicUrl;
            _context2.next = 4;
            return (0, _generateModulesFile.generateModulesFile)(cosmosConfig);

          case 4:
            app = (0, _server.createServerApp)({
              cosmosConfig: cosmosConfig,
              playgroundOpts: getPlaygroundOpts(cosmosConfig)
            });
            _createServer = (0, _server.createServer)(cosmosConfig, app), server = _createServer.server, startServer = _createServer.startServer, stopServer = _createServer.stopServer;


            if (publicPath) {
              (0, _server.serveStaticDir)(app, publicUrl, publicPath);
            }

            closeSockets = (0, _socket.attachSockets)(server);
            _context2.next = 10;
            return startServer();

          case 10:
            _context2.next = 12;
            return startFixtureFileWatcher(cosmosConfig);

          case 12:
            watcher = _context2.sent;
            return _context2.abrupt('return', (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
              return _regenerator2.default.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      watcher.close();
                      _context.next = 3;
                      return closeSockets();

                    case 3:
                      _context.next = 5;
                      return stopServer();

                    case 5:
                    case 'end':
                      return _context.stop();
                  }
                }
              }, _callee, _this);
            })));

          case 14:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function startServer() {
    return _ref.apply(this, arguments);
  };
}();

var startFixtureFileWatcher = function () {
  var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(cosmosConfig) {
    var rootPath, fileMatch;
    return _regenerator2.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            rootPath = cosmosConfig.rootPath, fileMatch = cosmosConfig.fileMatch;
            return _context3.abrupt('return', new Promise(function (resolve) {
              var watcher = _chokidar2.default.watch(fileMatch, {
                ignored: getNormalizedIgnores(cosmosConfig),
                ignoreInitial: true,
                cwd: rootPath
              }).on('ready', function () {
                return resolve(watcher);
              }).on('all', (0, _lodash.debounce)(function () {
                // Rebuild cosmos.modules file on fixture file changes
                (0, _generateModulesFile.generateModulesFile)(cosmosConfig);
              }, 50));
            }));

          case 2:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function startFixtureFileWatcher(_x) {
    return _ref4.apply(this, arguments);
  };
}();

var _chokidar = require('chokidar');

var _chokidar2 = _interopRequireDefault(_chokidar);

var _lodash = require('lodash');

var _reactCosmosConfig = require('react-cosmos-config');

var _server = require('../shared/server');

var _generateModulesFile = require('./generate-modules-file');

var _socket = require('./socket');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getPlaygroundOpts(_ref3) {
  var rootPath = _ref3.rootPath,
      plugin = _ref3.plugin;

  return {
    platform: 'native',
    projectKey: rootPath,
    plugin: plugin
  };
}

function getNormalizedIgnores(_ref5) {
  var fileMatchIgnore = _ref5.fileMatchIgnore,
      exclude = _ref5.exclude;

  return Array.isArray(exclude) ? [fileMatchIgnore].concat((0, _toConsumableArray3.default)(exclude)) : [fileMatchIgnore, exclude];
}