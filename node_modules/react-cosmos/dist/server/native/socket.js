'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachSockets = attachSockets;

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _socket = require('socket.io');

var _socket2 = _interopRequireDefault(_socket);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var d = (0, _debug2.default)('cosmos:server:socket');

function attachSockets(server) {
  d('init');
  var io = (0, _socket2.default)(server);

  io.on('connection', function (socket) {
    d('connection');
    // Forward commands between connected clients. Parties involved can be the
    // - The Cosmos UI, which acts as a remote control
    // - The web iframe or the React Native component loaders
    socket.on('cosmos-cmd', function (msg) {
      d('command %o', msg);
      socket.broadcast.emit('cosmos-cmd', msg);
    });
  });

  return function () {
    var sockets = io.sockets.sockets;

    Object.keys(sockets).forEach(function (id) {
      sockets[id].disconnect(true);
    });
  };
}