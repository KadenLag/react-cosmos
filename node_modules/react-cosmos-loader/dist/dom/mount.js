'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mount = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var mount = exports.mount = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(args) {
    var proxies, fixtures, loaderOpts, dismissRuntimeErrors, renderer, destroyLoader;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            proxies = args.proxies, fixtures = args.fixtures, loaderOpts = args.loaderOpts, dismissRuntimeErrors = args.dismissRuntimeErrors;
            renderer = (0, _renderer.createDomRenderer)(loaderOpts);

            // Reuse proxy instances

            if (!ErrorCatchProxy) {
              ErrorCatchProxy = (0, _ErrorCatchProxy.createErrorCatchProxy)();
            }

            _context.next = 5;
            return (0, _connectLoader.connectLoader)({
              renderer: renderer,
              proxies: [ErrorCatchProxy].concat((0, _toConsumableArray3.default)(proxies)),
              fixtures: fixtures,
              subscribe: subscribe,
              unsubscribe: unsubscribe,
              sendMessage: sendMessage,
              dismissRuntimeErrors: dismissRuntimeErrors
            });

          case 5:
            destroyLoader = _context.sent;
            return _context.abrupt('return', function destroy() {
              destroyLoader();
            });

          case 7:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function mount(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _ErrorCatchProxy = require('../components/ErrorCatchProxy');

var _renderer = require('./renderer');

var _connectLoader = require('../connect-loader');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ErrorCatchProxy = void 0;

var connectMsgHandler = void 0;

function subscribe(msgHandler) {
  connectMsgHandler = msgHandler;
  window.addEventListener('message', onMessage, false);
}

function unsubscribe() {
  window.removeEventListener('message', onMessage);
}

function onMessage(_ref2) {
  var data = _ref2.data;

  if (connectMsgHandler) {
    connectMsgHandler(data);
  }
}

function sendMessage(msg) {
  parent.postMessage(msg, '*');
}