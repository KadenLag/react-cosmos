{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.createStateProxy = createStateProxy;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash.isequal');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _lodash3 = require('lodash.isempty');\n\nvar _lodash4 = _interopRequireDefault(_lodash3);\n\nvar _lodash5 = require('lodash.omit');\n\nvar _lodash6 = _interopRequireDefault(_lodash5);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createStateProxy() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$fixtureKey = _ref.fixtureKey,\n      fixtureKey = _ref$fixtureKey === undefined ? 'state' : _ref$fixtureKey,\n      _ref$updateInterval = _ref.updateInterval,\n      updateInterval = _ref$updateInterval === undefined ? 500 : _ref$updateInterval;\n\n  var StateProxy = function (_Component) {\n    (0, _inherits3.default)(StateProxy, _Component);\n\n    function StateProxy() {\n      var _ref2;\n\n      var _temp, _this, _ret;\n\n      (0, _classCallCheck3.default)(this, StateProxy);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = StateProxy.__proto__ || Object.getPrototypeOf(StateProxy)).call.apply(_ref2, [this].concat(args))), _this), _this.prevState = {}, _this.onComponentRef = function (componentRef) {\n        // Save component ref to be able to read its state later\n        _this.componentRef = componentRef;\n        var _this$props = _this.props,\n            fixture = _this$props.fixture,\n            onComponentRef = _this$props.onComponentRef,\n            disableLocalState = _this$props.disableLocalState; // Ref callbacks are also called on unmount with null value\n\n        if (componentRef) {\n          if (disableLocalState) {\n            // Bubble up component ref\n            onComponentRef(componentRef);\n          } else {\n            // Load initial state right after component renders\n            var fixtureState = fixture[fixtureKey];\n\n            if (fixtureState) {\n              injectState(componentRef, fixtureState, function () {\n                // Bubble up component ref after state has been injected\n                onComponentRef(componentRef);\n                _this.prevState = fixtureState;\n\n                _this.scheduleStateUpdate();\n              });\n            } else {\n              // Bubble up component ref\n              onComponentRef(componentRef); // Only poll for state changes if component has state\n\n              var initialState = getState(componentRef);\n\n              if (initialState) {\n                _this.updateState(initialState);\n              }\n            }\n          }\n        } else {\n          // Bubble up null component ref\n          onComponentRef(componentRef);\n\n          _this.clearTimeout();\n        }\n      }, _this.onStateUpdate = function () {\n        if (_this.componentRef) {\n          _this.updateState(getState(_this.componentRef));\n        }\n      }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(StateProxy, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.clearTimeout();\n      }\n    }, {\n      key: 'updateState',\n      value: function updateState(updatedState) {\n        var onFixtureUpdate = this.props.onFixtureUpdate;\n\n        if (!(0, _lodash2.default)(updatedState, this.prevState)) {\n          this.prevState = updatedState;\n          onFixtureUpdate({\n            state: updatedState\n          });\n        }\n\n        this.scheduleStateUpdate();\n      }\n    }, {\n      key: 'scheduleStateUpdate',\n      value: function scheduleStateUpdate() {\n        // TODO: Find a better way than polling to hook into state changes\n        this.timeoutId = setTimeout(this.onStateUpdate, updateInterval);\n      }\n    }, {\n      key: 'clearTimeout',\n      value: function (_clearTimeout) {\n        function clearTimeout() {\n          return _clearTimeout.apply(this, arguments);\n        }\n\n        clearTimeout.toString = function () {\n          return _clearTimeout.toString();\n        };\n\n        return clearTimeout;\n      }(function () {\n        if (this.timeoutId) {\n          clearTimeout(this.timeoutId);\n        }\n      })\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            nextProxy = _props.nextProxy,\n            rest = (0, _objectWithoutProperties3.default)(_props, ['nextProxy']);\n        var NextProxy = nextProxy.value,\n            next = nextProxy.next;\n        return _react2.default.createElement(NextProxy, (0, _extends3.default)({}, rest, {\n          nextProxy: next(),\n          onComponentRef: this.onComponentRef\n        }));\n      }\n    }]);\n    return StateProxy;\n  }(_react.Component);\n\n  StateProxy.defaultProps = {\n    // Parent proxies can enable this flag to disable this proxy\n    disableLocalState: false\n  };\n  return StateProxy;\n}\n\nfunction injectState(component, state, cb) {\n  var rootState = (0, _lodash6.default)(state, 'children');\n  component.setState(rootState, function () {\n    var children = state.children;\n\n    if ((0, _lodash4.default)(children)) {\n      cb();\n      return;\n    }\n\n    var refs = component.refs;\n    var promises = [];\n    Object.keys(refs).forEach(function (ref) {\n      var child = refs[ref];\n      var childState = children[ref];\n\n      if (!(0, _lodash4.default)(childState)) {\n        promises.push(new Promise(function (resolve) {\n          injectState(child, childState, resolve);\n        }));\n      }\n    });\n\n    if (promises.length === 0) {\n      cb();\n    } else {\n      Promise.all(promises).then(cb);\n    }\n  });\n}\n\nfunction getState(component) {\n  var state = component.state,\n      refs = component.refs;\n\n  if (!refs) {\n    return state;\n  }\n\n  var children = {};\n  Object.keys(refs).forEach(function (ref) {\n    var child = refs[ref];\n    var childState = getState(child);\n\n    if (!(0, _lodash4.default)(childState)) {\n      children[ref] = childState;\n    }\n  });\n\n  if ((0, _lodash4.default)(children)) {\n    return state;\n  }\n\n  return (0, _extends3.default)({}, state, {\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"script"}