{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDomRenderer = createDomRenderer;\n\nvar _reactDom = require('react-dom');\n\nfunction createDomRenderer() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var containerQuerySelector = opts.containerQuerySelector;\n  var container = getDomContainer(containerQuerySelector);\n  return function renderer(element) {\n    (0, _reactDom.render)(element, container);\n    return {\n      unmount: function unmount() {\n        (0, _reactDom.unmountComponentAtNode)(container);\n      }\n    };\n  };\n}\n\nfunction getDomContainer(querySelector) {\n  if (!querySelector) {\n    return createDomContainer();\n  }\n\n  var existingContainer = document.querySelector(querySelector);\n\n  if (!existingContainer) {\n    console.warn('[Cosmos] Could not find ' + querySelector + ' element. Created fresh DOM container.');\n    return createDomContainer();\n  }\n\n  return existingContainer;\n}\n\nfunction createDomContainer() {\n  var existingNode = document.getElementById('root');\n\n  if (existingNode) {\n    return existingNode;\n  }\n\n  var newNode = document.createElement('div');\n  newNode.setAttribute('id', 'root');\n\n  if (document.body) {\n    document.body.appendChild(newNode);\n  }\n\n  return newNode;\n}","map":null,"metadata":{},"sourceType":"script"}